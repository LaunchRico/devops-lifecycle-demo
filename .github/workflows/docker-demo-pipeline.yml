name: asp net Docker Demo
on:
    push:
        branches:
            - main
    pull_request:
      types:
        - opened
        - reopened
      branches:
        - main

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v2

            - name: Build docker image
              run: |
                docker build -t aspgithubactions .
                docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
                docker tag aspgithubactions rico98/aspgithubactions
                docker push rico98/aspgithubactions
    deployment:
      runs-on: ubuntu-latest
      environment: developer
      steps:
        - name: Setup key
          id: setup-key
          env:
            PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          run: |
            echo "$PRIVATE_KEY" >> $HOME/key.pem
            chmod 400 $HOME/key.pem
        - name: Update image on server
          run: ssh -i $HOME/key.pem ubuntu@18.208.192.234


#            - name: Build and push Docker image
#              run: |
#                echo ${{ secrets.AWS_SECRET_ACCESS_KEY }} | docker login -u AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
#                docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-repository:latest .
#                docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/your-repository:latest
#
#            - name: Configure AWS credentials
#              run: |
#                aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
#                aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#                aws configure set default.region ${{ secrets.AWS_REGION }}
#
#            - name: Deploy to AWS ECS
#              run: |
#                aws ecs update-service --cluster your-cluster-name --service your-service-name --force-new-deployment